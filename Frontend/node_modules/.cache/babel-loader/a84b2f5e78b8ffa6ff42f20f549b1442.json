{"ast":null,"code":"var _jsxFileName = \"/home/uladzimir/All/Studies/microblog/microblog/frontend/src/components/PostItem.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { NavLink } from 'react-router-dom';\nimport axiosInstance from 'axios';\nimport { faThumbsUp as likeReg, faThumbsDown as dislikeReg, faComment } from '@fortawesome/free-regular-svg-icons';\nimport { faReply, faThumbsUp as likeSol, faThumbsDown as dislikeSol } from '@fortawesome/free-solid-svg-icons';\n\nclass PostItem extends Component {\n  constructor(props) {\n    super(props);\n\n    this.btnClick = e => {\n      let element = e.target.getAttribute('name');\n\n      switch (element) {\n        case 'like':\n          axiosInstance.post(`http://localhost:8000/api/posts/like/${this.post.id}`, {\n            user: this.props.account.user.id,\n            liked: this.state.liked\n          }).then(res => {\n            this.setState({\n              dislikes: res.data.dislikes.length,\n              likes: res.data.likes.length,\n              disliked: false,\n              liked: !this.state.liked\n            });\n          });\n          break;\n\n        case 'dislike':\n          axiosInstance.post(`http://localhost:8000/api/posts/dislike/${this.post.id}`, {\n            user: this.props.account.user.id,\n            disliked: this.state.disliked\n          }).then(res => {\n            this.setState({\n              likes: res.data.likes.length,\n              dislikes: res.data.dislikes.length,\n              liked: false,\n              disliked: !this.state.disliked\n            });\n          });\n          break;\n      }\n    };\n\n    this.state = {\n      liked: '',\n      disliked: '',\n      likes: null,\n      dislikes: null\n    };\n    this.post = props.post;\n    this.btnClick = this.btnClick.bind(this);\n  }\n\n  componentDidMount() {\n    this.setState({\n      liked: this.checkLikes(),\n      disliked: this.checkDislikes(),\n      likes: this.post.likes.length,\n      dislikes: this.post.dislikes.length\n    });\n  }\n\n  formatDate(date) {\n    let dateObj = new Date(date);\n    let dateNow = new Date();\n    let timeDiff = Math.abs(dateNow.getTime() - dateObj.getTime()) / 1000;\n    let add;\n    if (timeDiff < 60) add = ' seconds';else if (timeDiff < 60 * 60) {\n      add = ' minutes';\n      timeDiff /= 60;\n    } else if (timeDiff < 60 * 60 * 24) {\n      add = ' hours';\n      timeDiff /= 60 * 60;\n    } else if (timeDiff < 60 * 60 * 24 * 30) {\n      add = ' days';\n      timeDiff /= 60 * 60 * 24;\n    }\n    let res = add ? Math.round(timeDiff) + add : 'More than month ago';\n    return res;\n  }\n\n  getRandomInt(max) {\n    return Math.floor(Math.random() * Math.floor(max));\n  }\n\n  checkLikes() {\n    let liked = false;\n    this.post.likes.forEach(user => {\n      if (user.id == this.props.account.user.id) liked = true;\n    });\n    return liked;\n  }\n\n  checkDislikes() {\n    let disliked = false;\n    this.post.dislikes.forEach(user => {\n      if (user.id == this.props.account.user.id) disliked = true;\n    });\n    return disliked;\n  }\n\n  render() {\n    console.log(this.post.user.user);\n    return /*#__PURE__*/React.createElement(\"article\", {\n      className: \"post-container d-flex\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 5\n      }\n    });\n  }\n\n}\n\nexport default PostItem;","map":{"version":3,"sources":["/home/uladzimir/All/Studies/microblog/microblog/frontend/src/components/PostItem.js"],"names":["React","Component","PropTypes","FontAwesomeIcon","NavLink","axiosInstance","faThumbsUp","likeReg","faThumbsDown","dislikeReg","faComment","faReply","likeSol","dislikeSol","PostItem","constructor","props","btnClick","e","element","target","getAttribute","post","id","user","account","liked","state","then","res","setState","dislikes","data","length","likes","disliked","bind","componentDidMount","checkLikes","checkDislikes","formatDate","date","dateObj","Date","dateNow","timeDiff","Math","abs","getTime","add","round","getRandomInt","max","floor","random","forEach","render","console","log"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAAgC,OAAhC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,eAAT,QAAgC,gCAAhC;AACA,SAAQC,OAAR,QAAsB,kBAAtB;AAEA,OAAOC,aAAP,MAA0B,OAA1B;AACA,SAASC,UAAU,IAAIC,OAAvB,EAAgCC,YAAY,IAAIC,UAAhD,EAA4DC,SAA5D,QAA4E,qCAA5E;AACA,SAASC,OAAT,EAAkBL,UAAU,IAAIM,OAAhC,EAAyCJ,YAAY,IAAIK,UAAzD,QAA0E,mCAA1E;;AAEA,MAAMC,QAAN,SAAuBb,SAAvB,CAAgC;AAC5Bc,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAiDnBC,QAjDmB,GAiDRC,CAAC,IAAI;AACd,UAAIC,OAAO,GAAGD,CAAC,CAACE,MAAF,CAASC,YAAT,CAAsB,MAAtB,CAAd;;AACA,cAAOF,OAAP;AACE,aAAK,MAAL;AACEd,UAAAA,aAAa,CAACiB,IAAd,CAAoB,wCAAuC,KAAKA,IAAL,CAAUC,EAAG,EAAxE,EAA2E;AACzEC,YAAAA,IAAI,EAAE,KAAKR,KAAL,CAAWS,OAAX,CAAmBD,IAAnB,CAAwBD,EAD2C;AAEzEG,YAAAA,KAAK,EAAE,KAAKC,KAAL,CAAWD;AAFuD,WAA3E,EAICE,IAJD,CAIMC,GAAG,IAAI;AACX,iBAAKC,QAAL,CAAc;AACZC,cAAAA,QAAQ,EAAEF,GAAG,CAACG,IAAJ,CAASD,QAAT,CAAkBE,MADhB;AAEZC,cAAAA,KAAK,EAAEL,GAAG,CAACG,IAAJ,CAASE,KAAT,CAAeD,MAFV;AAGZE,cAAAA,QAAQ,EAAE,KAHE;AAIZT,cAAAA,KAAK,EAAC,CAAC,KAAKC,KAAL,CAAWD;AAJN,aAAd;AAMD,WAXD;AAYA;;AACF,aAAK,SAAL;AACErB,UAAAA,aAAa,CAACiB,IAAd,CAAoB,2CAA0C,KAAKA,IAAL,CAAUC,EAAG,EAA3E,EAA8E;AAC5EC,YAAAA,IAAI,EAAE,KAAKR,KAAL,CAAWS,OAAX,CAAmBD,IAAnB,CAAwBD,EAD8C;AAE5EY,YAAAA,QAAQ,EAAE,KAAKR,KAAL,CAAWQ;AAFuD,WAA9E,EAICP,IAJD,CAIMC,GAAG,IAAI;AACX,iBAAKC,QAAL,CAAc;AACZI,cAAAA,KAAK,EAAEL,GAAG,CAACG,IAAJ,CAASE,KAAT,CAAeD,MADV;AAEZF,cAAAA,QAAQ,EAAEF,GAAG,CAACG,IAAJ,CAASD,QAAT,CAAkBE,MAFhB;AAGZP,cAAAA,KAAK,EAAE,KAHK;AAIZS,cAAAA,QAAQ,EAAC,CAAC,KAAKR,KAAL,CAAWQ;AAJT,aAAd;AAMD,WAXD;AAYC;AA5BL;AA8BD,KAjFkB;;AAEjB,SAAKR,KAAL,GAAa;AACXD,MAAAA,KAAK,EAAE,EADI;AAEXS,MAAAA,QAAQ,EAAE,EAFC;AAGXD,MAAAA,KAAK,EAAE,IAHI;AAIXH,MAAAA,QAAQ,EAAE;AAJC,KAAb;AAMA,SAAKT,IAAL,GAAYN,KAAK,CAACM,IAAlB;AACA,SAAKL,QAAL,GAAgB,KAAKA,QAAL,CAAcmB,IAAd,CAAmB,IAAnB,CAAhB;AACD;;AAEDC,EAAAA,iBAAiB,GAAE;AACjB,SAAKP,QAAL,CAAc;AACZJ,MAAAA,KAAK,EAAE,KAAKY,UAAL,EADK;AAEZH,MAAAA,QAAQ,EAAE,KAAKI,aAAL,EAFE;AAGZL,MAAAA,KAAK,EAAE,KAAKZ,IAAL,CAAUY,KAAV,CAAgBD,MAHX;AAIZF,MAAAA,QAAQ,EAAE,KAAKT,IAAL,CAAUS,QAAV,CAAmBE;AAJjB,KAAd;AAMD;;AAEDO,EAAAA,UAAU,CAACC,IAAD,EAAM;AACd,QAAIC,OAAO,GAAG,IAAIC,IAAJ,CAASF,IAAT,CAAd;AACA,QAAIG,OAAO,GAAG,IAAID,IAAJ,EAAd;AACA,QAAIE,QAAQ,GAAGC,IAAI,CAACC,GAAL,CAASH,OAAO,CAACI,OAAR,KAAoBN,OAAO,CAACM,OAAR,EAA7B,IAAgD,IAA/D;AACA,QAAIC,GAAJ;AACA,QAAIJ,QAAQ,GAAG,EAAf,EACEI,GAAG,GAAG,UAAN,CADF,KAEK,IAAIJ,QAAQ,GAAG,KAAK,EAApB,EAAuB;AAC1BI,MAAAA,GAAG,GAAG,UAAN;AACAJ,MAAAA,QAAQ,IAAI,EAAZ;AACD,KAHI,MAIA,IAAIA,QAAQ,GAAG,KAAK,EAAL,GAAU,EAAzB,EAA4B;AAC/BI,MAAAA,GAAG,GAAG,QAAN;AACAJ,MAAAA,QAAQ,IAAI,KAAK,EAAjB;AACD,KAHI,MAIA,IAAIA,QAAQ,GAAG,KAAK,EAAL,GAAU,EAAV,GAAe,EAA9B,EAAiC;AACpCI,MAAAA,GAAG,GAAG,OAAN;AACAJ,MAAAA,QAAQ,IAAI,KAAK,EAAL,GAAU,EAAtB;AACD;AAED,QAAIhB,GAAG,GAAGoB,GAAG,GAAGH,IAAI,CAACI,KAAL,CAAWL,QAAX,IAAuBI,GAA1B,GAAgC,qBAA7C;AACA,WAAOpB,GAAP;AACD;;AAEDsB,EAAAA,YAAY,CAACC,GAAD,EAAM;AAChB,WAAON,IAAI,CAACO,KAAL,CAAWP,IAAI,CAACQ,MAAL,KAAgBR,IAAI,CAACO,KAAL,CAAWD,GAAX,CAA3B,CAAP;AACD;;AAoCDd,EAAAA,UAAU,GAAE;AACV,QAAIZ,KAAK,GAAG,KAAZ;AACA,SAAKJ,IAAL,CAAUY,KAAV,CAAgBqB,OAAhB,CAAyB/B,IAAD,IAAU;AAChC,UAAIA,IAAI,CAACD,EAAL,IAAW,KAAKP,KAAL,CAAWS,OAAX,CAAmBD,IAAnB,CAAwBD,EAAvC,EACEG,KAAK,GAAG,IAAR;AACH,KAHD;AAIA,WAAOA,KAAP;AACD;;AAEDa,EAAAA,aAAa,GAAE;AACb,QAAIJ,QAAQ,GAAG,KAAf;AACA,SAAKb,IAAL,CAAUS,QAAV,CAAmBwB,OAAnB,CAA4B/B,IAAD,IAAU;AACnC,UAAIA,IAAI,CAACD,EAAL,IAAW,KAAKP,KAAL,CAAWS,OAAX,CAAmBD,IAAnB,CAAwBD,EAAvC,EACEY,QAAQ,GAAG,IAAX;AACH,KAHD;AAIA,WAAOA,QAAP;AACD;;AAEDqB,EAAAA,MAAM,GAAE;AACNC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKpC,IAAL,CAAUE,IAAV,CAAeA,IAA3B;AACF,wBACA;AAAS,MAAA,SAAS,EAAC,uBAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA;AA0BH;;AAlI+B;;AAqIhC,eAAeV,QAAf","sourcesContent":["import React, {Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport {NavLink} from 'react-router-dom'\n\nimport axiosInstance from 'axios';\nimport { faThumbsUp as likeReg, faThumbsDown as dislikeReg, faComment} from '@fortawesome/free-regular-svg-icons'\nimport { faReply, faThumbsUp as likeSol, faThumbsDown as dislikeSol} from '@fortawesome/free-solid-svg-icons'\n\nclass PostItem extends Component{\n    constructor(props) {\n      super(props);\n      this.state = {\n        liked: '',\n        disliked: '',\n        likes: null,\n        dislikes: null\n      };\n      this.post = props.post;\n      this.btnClick = this.btnClick.bind(this)\n    }\n\n    componentDidMount(){\n      this.setState({\n        liked: this.checkLikes(),\n        disliked: this.checkDislikes(),\n        likes: this.post.likes.length,\n        dislikes: this.post.dislikes.length\n      })\n    }\n\n    formatDate(date){\n      let dateObj = new Date(date)\n      let dateNow = new Date();\n      let timeDiff = Math.abs(dateNow.getTime() - dateObj.getTime())/1000;\n      let add;\n      if (timeDiff < 60)\n        add = ' seconds'\n      else if (timeDiff < 60 * 60){\n        add = ' minutes'\n        timeDiff /= 60\n      }\n      else if (timeDiff < 60 * 60 * 24){\n        add = ' hours'\n        timeDiff /= 60 * 60\n      }\n      else if (timeDiff < 60 * 60 * 24 * 30){\n        add = ' days'\n        timeDiff /= 60 * 60 * 24\n      }\n\n      let res = add ? Math.round(timeDiff) + add : 'More than month ago' \n      return res\n    }\n\n    getRandomInt(max) {\n      return Math.floor(Math.random() * Math.floor(max));\n    }\n\n    btnClick = e => {\n      let element = e.target.getAttribute('name');\n      switch(element){\n        case 'like':\n          axiosInstance.post(`http://localhost:8000/api/posts/like/${this.post.id}`, {\n            user: this.props.account.user.id,\n            liked: this.state.liked\n          })\n          .then(res => {\n            this.setState({\n              dislikes: res.data.dislikes.length,\n              likes: res.data.likes.length,\n              disliked: false,\n              liked:!this.state.liked\n            })\n          })\n          break;\n        case 'dislike':\n          axiosInstance.post(`http://localhost:8000/api/posts/dislike/${this.post.id}`, {\n            user: this.props.account.user.id,\n            disliked: this.state.disliked\n          })\n          .then(res => {\n            this.setState({\n              likes: res.data.likes.length,\n              dislikes: res.data.dislikes.length,\n              liked: false,\n              disliked:!this.state.disliked\n            })\n          });\n           break;\n      }\n    }\n\n    checkLikes(){\n      let liked = false\n      this.post.likes.forEach((user) => {\n        if (user.id == this.props.account.user.id) \n          liked = true\n      })\n      return liked      \n    }\n\n    checkDislikes(){\n      let disliked = false\n      this.post.dislikes.forEach((user) => {\n        if (user.id == this.props.account.user.id) \n          disliked = true\n      })\n      return disliked      \n    }\n\n    render(){\n      console.log(this.post.user.user)\n    return (\n    <article className=\"post-container d-flex\">\n      {/* <div>\n        <img className=\"mr-2\" src=\"https://fogsoft.com/wp-content/uploads/2017/07/user-logo.png\" width=\"50\"></img>\n      </div>\n      <div>\n        <div className=\"d-inline-flex flex-wrap\">\n          <p className=\"m-0\"><b>{this.post.user.first_name} {this.post.user.last_name}</b></p>\n          <p className=\"m-0\" style={{color:\"gray\"}}>&nbsp;\n            <NavLink style={{ color:\"gray\"}} to={\"/user/\" + this.post.user.username}>@{this.post.user.username}</NavLink>\n          </p>\n          <p className=\"m-0\" style={{color:\"gray\"}}>&nbsp;&middot;&nbsp;{this.formatDate(this.post.date)}</p>\n        </div>\n        <div className=\"pb-1\">{this.post.body}</div>\n        <div className=\"d-inline-flex flex-wrap\" style={{fontSize:\"10pt\"}}>\n          <p className=\"m-0\" style={{color:\"#17bf63\"}}> <span name=\"like\" onClick={this.btnClick} className=\"like-span\">Одобряю <FontAwesomeIcon name=\"like\" icon={this.state.liked ? likeSol : likeReg}/></span>{this.state.likes || ''} </p>\n          &nbsp;&nbsp;&nbsp;\n          <p className=\"m-0\" style={{color:\"#e0245e\"}}> <span name=\"dislike\" onClick={this.btnClick} className=\"dislike-span\">Осуждаю <FontAwesomeIcon name=\"dislike\" icon={this.state.disliked ? dislikeSol : dislikeReg}/></span>{this.state.dislikes || ''}</p>\n          &nbsp;&nbsp;&nbsp;\n          <p className=\"m-0\" style={{color:\"#007bff\"}}> <span name=\"comment\" onClick={this.btnClick} className=\"repost-span\">Comment <FontAwesomeIcon name=\"comment\" icon={faComment}/></span>{this.getRandomInt(1000)}</p>\n          &nbsp;&nbsp;&nbsp;\n          <p className=\"m-0\" style={{color:\"#007bff\"}}> <span name=\"repost\" onClick={this.btnClick} className=\"repost-span\">Repost <FontAwesomeIcon name=\"repost\" icon={faReply}/></span>{this.getRandomInt(1000)}</p>\n        </div>      \n      </div>   */}\n    </article>\n    )\n}\n}\n\nexport default PostItem"]},"metadata":{},"sourceType":"module"}