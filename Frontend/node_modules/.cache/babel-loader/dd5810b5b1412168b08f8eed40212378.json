{"ast":null,"code":"var _jsxFileName = \"/home/uladzimir/All/Studies/microblog/microblog/frontend/src/pages/Login.js\";\n// import axiosInstance from '../axios';\n// import { useHistory } from 'react-router-dom';\n// import { useState } from 'react';\n// import React, {Fragment} from 'react'\n// export default function SignUp(){\n//     const history = useHistory();\n//     const initialFormData = Object.freeze({\n//         username: '',\n//         password: '',\n//     });\n//     const [formData, updateFormData] = useState(initialFormData);\n//     const handleChange = (e) => {\n//         updateFormData({\n//             ...formData,\n//             [e.target.name]: e.target.value.trim(),\n//         });\n//     };\n//     const handleSubmit = (e) => {\n//         e.preventDefault();\n//         axiosInstance\n//             .post(`token/`, {\n//                 username: formData.username,\n//                 password: formData.password,\n//             }).then((res) => {\n//                 console.log(res);\n//                 console.log(res.data);\n//                 localStorage.setItem('access_token', res.data.access);\n//                 localStorage.setItem('refresh_token', res.data.refresh);\n//                 axiosInstance.defaults.headers['Authorization'] =\n//                     'JWT ' + localStorage.getItem('access_token');\n//             }).then(history.push('/'));\n//     }     \n//     return (\n//         <div className=\"container\">\n//             <div className=\"row justify-content-center mt-5\">\n//                 <h2>Sign In</h2>\n//             </div>\n//             <div className=\"row justify-content-center\">\n//                 <form className=\"col-4\" onSubmit={e => this.props.handle_login(e, this.state)}>\n//                     <div className=\"form-group\">\n//                         <label htmlFor=\"exampleInputEmail1\">Username</label>\n//                         <input onChange={handleChange} type=\"text\" className=\"form-control\" id=\"username\" name=\"username\" aria-describedby=\"usernameHelp\" placeholder=\"Enter username\" />\n//                         <small id=\"usernameHelp\" className=\"form-text text-muted\">Create your unique username</small>\n//                     </div>\n//                     <div className=\"form-group\">\n//                         <label htmlFor=\"exampleInputPassword1\">Password</label>\n//                         <input onChange={handleChange} type=\"password\" className=\"form-control\" id=\"password\" name=\"password\" placeholder=\"Password\" />\n//                     </div>\n//                     {/* <button onClick={handleSubmit} type=\"submit\" className=\"btn btn-primary w-100\">Sign In</button> */}\n//                     <button type=\"submit\" className=\"btn btn-primary w-100\">Sign In</button>\n//                 </form>\n//             </div>\n//         </div>\n//     )\n// }\nimport PropTypes from 'prop-types';\nimport { NavLink } from 'react-router-dom';\nimport ReactDOM from 'react-dom';\nimport React, { Component } from 'react';\n\nclass LoginForm extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      username: '',\n      password: ''\n    };\n\n    this.handle_change = e => {\n      var element = document.querySelector('.error-creds');\n      if (element) element.parentNode.removeChild(element);\n      const name = e.target.name;\n      const value = e.target.value;\n      this.setState(prevstate => {\n        const newState = { ...prevstate\n        };\n        newState[name] = value;\n        return newState;\n      });\n    };\n\n    this.handle_login = (e, data) => {\n      e.preventDefault();\n      fetch('http://localhost:8000/api/token-auth/', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(data)\n      }).then(res => res.json()).then(json => {\n        console.log(json);\n\n        if (json.access && json.refresh) {\n          localStorage.setItem('access_token', json.access);\n          localStorage.setItem('refresh_token', json.refresh);\n          this.props.updateState(true);\n          this.props.history.push('/');\n        } else {\n          const errorElement = /*#__PURE__*/React.createElement(\"p\", {\n            className: \"error-creds\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 13\n            }\n          }, /*#__PURE__*/React.createElement(\"b\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 40\n            }\n          }, \"Invalid username or password!\"));\n          ReactDOM.render(errorElement, document.getElementById('error-sec'));\n        }\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row justify-content-center mt-5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 15\n      }\n    }, \"Welcome to \", /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 30\n      }\n    }, \"Microblog!\"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row justify-content-center mt-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 15\n      }\n    }, \"Sign In\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row justify-content-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      className: \"col-8 col-lg-4 col-md-6 col-sm-8\",\n      onSubmit: e => this.handle_login(e, this.state),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"exampleInputEmail1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 25\n      }\n    }, \"Username\"), /*#__PURE__*/React.createElement(\"input\", {\n      onChange: this.handle_change,\n      type: \"text\",\n      className: \"form-control\",\n      id: \"username\",\n      name: \"username\",\n      \"aria-describedby\": \"usernameHelp\",\n      placeholder: \"Enter username\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"exampleInputPassword1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 25\n      }\n    }, \"Password\"), /*#__PURE__*/React.createElement(\"input\", {\n      onChange: this.handle_change,\n      type: \"password\",\n      className: \"form-control\",\n      id: \"password\",\n      name: \"password\",\n      placeholder: \"Password\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"btn btn-primary w-100\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 21\n      }\n    }, \"Sign In\"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row justify-content-center mt-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 15\n      }\n    }, \"Please, log in or \", /*#__PURE__*/React.createElement(\"i\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 36\n      }\n    }, /*#__PURE__*/React.createElement(NavLink, {\n      to: \"/register\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 39\n      }\n    }, \"create an account!\")))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row justify-content-center mt-3\",\n      id: \"error-sec\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 13\n      }\n    }));\n  }\n\n}\n\nexport default LoginForm; // LoginForm.propTypes = {\n//   handle_login: PropTypes.func.isRequired\n// };","map":{"version":3,"sources":["/home/uladzimir/All/Studies/microblog/microblog/frontend/src/pages/Login.js"],"names":["PropTypes","NavLink","ReactDOM","React","Component","LoginForm","state","username","password","handle_change","e","element","document","querySelector","parentNode","removeChild","name","target","value","setState","prevstate","newState","handle_login","data","preventDefault","fetch","method","headers","body","JSON","stringify","then","res","json","console","log","access","refresh","localStorage","setItem","props","updateState","history","push","errorElement","render","getElementById"],"mappings":"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","sourcesContent":["// import axiosInstance from '../axios';\n// import { useHistory } from 'react-router-dom';\n// import { useState } from 'react';\n// import React, {Fragment} from 'react'\n\n// export default function SignUp(){\n//     const history = useHistory();\n//     const initialFormData = Object.freeze({\n//         username: '',\n//         password: '',\n//     });\n\n//     const [formData, updateFormData] = useState(initialFormData);\n\n//     const handleChange = (e) => {\n//         updateFormData({\n//             ...formData,\n//             [e.target.name]: e.target.value.trim(),\n//         });\n//     };\n\n//     const handleSubmit = (e) => {\n//         e.preventDefault();\n//         axiosInstance\n//             .post(`token/`, {\n//                 username: formData.username,\n//                 password: formData.password,\n//             }).then((res) => {\n//                 console.log(res);\n//                 console.log(res.data);\n//                 localStorage.setItem('access_token', res.data.access);\n//                 localStorage.setItem('refresh_token', res.data.refresh);\n//                 axiosInstance.defaults.headers['Authorization'] =\n//                     'JWT ' + localStorage.getItem('access_token');\n//             }).then(history.push('/'));\n//     }     \n\n//     return (\n//         <div className=\"container\">\n//             <div className=\"row justify-content-center mt-5\">\n//                 <h2>Sign In</h2>\n//             </div>\n//             <div className=\"row justify-content-center\">\n//                 <form className=\"col-4\" onSubmit={e => this.props.handle_login(e, this.state)}>\n//                     <div className=\"form-group\">\n//                         <label htmlFor=\"exampleInputEmail1\">Username</label>\n//                         <input onChange={handleChange} type=\"text\" className=\"form-control\" id=\"username\" name=\"username\" aria-describedby=\"usernameHelp\" placeholder=\"Enter username\" />\n//                         <small id=\"usernameHelp\" className=\"form-text text-muted\">Create your unique username</small>\n//                     </div>\n//                     <div className=\"form-group\">\n//                         <label htmlFor=\"exampleInputPassword1\">Password</label>\n//                         <input onChange={handleChange} type=\"password\" className=\"form-control\" id=\"password\" name=\"password\" placeholder=\"Password\" />\n//                     </div>\n//                     {/* <button onClick={handleSubmit} type=\"submit\" className=\"btn btn-primary w-100\">Sign In</button> */}\n//                     <button type=\"submit\" className=\"btn btn-primary w-100\">Sign In</button>\n//                 </form>\n//             </div>\n//         </div>\n//     )\n// }\n\nimport PropTypes from 'prop-types';\nimport { NavLink } from 'react-router-dom';\nimport ReactDOM from 'react-dom'\nimport React, { Component} from 'react';\n\nclass LoginForm extends Component {\n  state = {\n    username: '',\n    password: ''\n  };\n\n  handle_change = e => {\n    var element = document.querySelector('.error-creds');\n    if (element)\n      element.parentNode.removeChild(element);\n    const name = e.target.name;\n    const value = e.target.value;\n    this.setState(prevstate => {\n      const newState = { ...prevstate };\n      newState[name] = value;\n      return newState;\n    });\n  };\n\n  handle_login = (e, data) => {\n    e.preventDefault();\n    fetch('http://localhost:8000/api/token-auth/', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(data)\n    })\n      .then(res => res.json())\n      .then(json => {\n        console.log(json);\n        if (json.access && json.refresh)\n        {\n          localStorage.setItem('access_token', json.access);\n          localStorage.setItem('refresh_token', json.refresh);\n          this.props.updateState(true)\n          this.props.history.push('/')\n        }\n        else{\n          const errorElement = (\n            <p className=\"error-creds\"><b>Invalid username or password!</b></p>\n          )\n          ReactDOM.render(errorElement, document.getElementById('error-sec'));\n        }\n      })\n  };\n\n  render() {\n    return (\n        <div className=\"container\">\n            <div className=\"row justify-content-center mt-5\">\n              <h2>Welcome to <strong>Microblog!</strong></h2>\n            </div>\n            <div className=\"row justify-content-center mt-3\">\n              <h3>Sign In</h3>\n            </div>\n            <div className=\"row justify-content-center\">\n                <form className=\"col-8 col-lg-4 col-md-6 col-sm-8\" onSubmit={e => this.handle_login(e, this.state)}>\n                    <div className=\"form-group\">\n                        <label htmlFor=\"exampleInputEmail1\">Username</label>\n                        <input onChange={this.handle_change} type=\"text\" className=\"form-control\" id=\"username\" name=\"username\" aria-describedby=\"usernameHelp\" placeholder=\"Enter username\" />\n                    </div>\n                    <div className=\"form-group\">\n                        <label htmlFor=\"exampleInputPassword1\">Password</label>\n                        <input onChange={this.handle_change} type=\"password\" className=\"form-control\" id=\"password\" name=\"password\" placeholder=\"Password\" />\n                    </div>\n                    <button type=\"submit\" className=\"btn btn-primary w-100\">Sign In</button>\n                </form>\n            </div>\n            <div className=\"row justify-content-center mt-3\">\n              <p>Please, log in or <i><NavLink to={\"/register\"}>create an account!</NavLink></i></p>\n            </div>\n            <div className=\"row justify-content-center mt-3\" id=\"error-sec\">\n            </div>\n        </div>\n    );\n  }\n}\n\nexport default LoginForm;\n\n// LoginForm.propTypes = {\n//   handle_login: PropTypes.func.isRequired\n// };"]},"metadata":{},"sourceType":"module"}