{"ast":null,"code":"var _jsxFileName = \"/app/src/components/CommentItem.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { NavLink } from 'react-router-dom';\n\nclass CommentItem extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n    this.comment = props.comment;\n  }\n\n  formatDate(date) {\n    let dateObj = new Date(date);\n    let dateNow = new Date();\n    let timeDiff = Math.abs(dateNow.getTime() - dateObj.getTime()) / 1000;\n    let add;\n    if (timeDiff < 60) add = ' seconds';else if (timeDiff < 60 * 60) {\n      add = ' minutes';\n      timeDiff /= 60;\n    } else if (timeDiff < 60 * 60 * 24) {\n      add = ' hours';\n      timeDiff /= 60 * 60;\n    } else if (timeDiff < 60 * 60 * 24 * 30) {\n      add = ' days';\n      timeDiff /= 60 * 60 * 24;\n    }\n    let res = add ? Math.round(timeDiff) + add : 'More than month ago';\n    return res;\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"article\", {\n      className: \"post-container d-flex\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      className: \"mr-2 rounded-circle\",\n      src: this.comment.user.img,\n      width: \"50\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-inline-flex flex-wrap\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"m-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 44\n      }\n    }, this.comment.user.user.first_name, \" \", this.comment.user.user.last_name)), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"m-0\",\n      style: {\n        color: \"#5b7083\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 25\n      }\n    }, \"\\xA0\", /*#__PURE__*/React.createElement(NavLink, {\n      style: {\n        color: \"#5b7083\"\n      },\n      to: \"/user/\" + this.comment.user.user.username,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 29\n      }\n    }, \"@\", this.comment.user.user.username)), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"m-0\",\n      style: {\n        color: \"#5b7083\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 25\n      }\n    }, \"\\xA0\\xB7\\xA0\", this.formatDate(this.comment.date))), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        color: \"#5b7083\",\n        fontSize: \"11pt\"\n      },\n      className: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 25\n      }\n    }, \" Answer to @\", this.props.post.user.user.username), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 25\n      }\n    }, this.comment.body)));\n  }\n\n}\n\nexport default CommentItem;","map":{"version":3,"sources":["/app/src/components/CommentItem.js"],"names":["React","Component","PropTypes","FontAwesomeIcon","NavLink","CommentItem","constructor","props","state","comment","formatDate","date","dateObj","Date","dateNow","timeDiff","Math","abs","getTime","add","res","round","render","user","img","first_name","last_name","color","username","fontSize","post","body"],"mappings":"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","sourcesContent":["import React, {Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport {NavLink} from 'react-router-dom'\n\nclass CommentItem extends Component{\n    constructor(props) {\n      super(props);\n      this.state = {\n    \n      };\n      this.comment = props.comment;\n    }\n\n    formatDate(date){\n        let dateObj = new Date(date)\n        let dateNow = new Date();\n        let timeDiff = Math.abs(dateNow.getTime() - dateObj.getTime())/1000;\n        let add;\n        if (timeDiff < 60)\n          add = ' seconds'\n        else if (timeDiff < 60 * 60){\n          add = ' minutes'\n          timeDiff /= 60\n        }\n        else if (timeDiff < 60 * 60 * 24){\n          add = ' hours'\n          timeDiff /= 60 * 60\n        }\n        else if (timeDiff < 60 * 60 * 24 * 30){\n          add = ' days'\n          timeDiff /= 60 * 60 * 24\n        }\n  \n        let res = add ? Math.round(timeDiff) + add : 'More than month ago' \n        return res\n      }\n\n    render(){\n        return(\n                <article className=\"post-container d-flex\">\n                    <div>\n                        <img className=\"mr-2 rounded-circle\" src={this.comment.user.img} width=\"50\"></img>\n                    </div>\n                    <div>\n                        <div className=\"d-inline-flex flex-wrap\">\n                        <p className=\"m-0\"><b>{this.comment.user.user.first_name} {this.comment.user.user.last_name}</b></p>\n                        <p className=\"m-0\" style={{color:\"#5b7083\"}}>&nbsp;\n                            <NavLink style={{ color:\"#5b7083\"}} to={\"/user/\" + this.comment.user.user.username}>@{this.comment.user.user.username}</NavLink>\n                        </p>\n                        <p className=\"m-0\" style={{color:\"#5b7083\"}}>&nbsp;&middot;&nbsp;{this.formatDate(this.comment.date)}</p>\n                        </div>\n                        <div style={{color: \"#5b7083\", fontSize: \"11pt\"}} className=\"\"> Answer to @{this.props.post.user.user.username}</div>\n                        <div className=\"\">{this.comment.body}</div>\n                        {/* <div className=\"d-inline-flex flex-wrap\" style={{fontSize:\"10pt\"}}>\n                        <p className=\"m-0\" style={{color:\"#17bf63\"}}> <span name=\"like\" onClick={this.btnClick} className=\"like-span\">Одобряю <FontAwesomeIcon name=\"like\" icon={this.state.liked ? likeSol : likeReg}/></span>{this.state.likes || ''} </p>\n                        &nbsp;&nbsp;&nbsp;\n                        <p className=\"m-0\" style={{color:\"#e0245e\"}}> <span name=\"dislike\" onClick={this.btnClick} className=\"dislike-span\">Осуждаю <FontAwesomeIcon name=\"dislike\" icon={this.state.disliked ? dislikeSol : dislikeReg}/></span>{this.state.dislikes || ''}</p>\n                        &nbsp;&nbsp;&nbsp;\n                        <p className=\"m-0\" style={{color:\"#007bff\"}}> <span name=\"comment\" onClick={this.btnClick} className=\"repost-span\">Comment <FontAwesomeIcon name=\"comment\" icon={faComment}/></span>{this.getRandomInt(1000)}</p>\n                        &nbsp;&nbsp;&nbsp;\n                        <p className=\"m-0\" style={{color:\"#007bff\"}}> <span name=\"repost\" onClick={this.btnClick} className=\"repost-span\">Repost <FontAwesomeIcon name=\"repost\" icon={faReply}/></span>{this.getRandomInt(1000)}</p>\n                        </div>       */}\n                    </div>  \n                </article>\n        )\n    }\n}\n\nexport default CommentItem"]},"metadata":{},"sourceType":"module"}