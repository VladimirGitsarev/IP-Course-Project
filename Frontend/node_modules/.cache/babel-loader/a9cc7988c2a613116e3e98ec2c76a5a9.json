{"ast":null,"code":"var _jsxFileName = \"/home/uladzimir/All/Studies/microblog/microblog/frontend/src/components/PostItem.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faThumbsUp, faThumbsDown } from '@fortawesome/free-regular-svg-icons';\n\nclass PostItem extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n    this.post = props.post;\n  }\n\n  formatDate(date) {\n    let dateObj = new Date(date);\n    let dateNow = new Date();\n    let timeDiff = Math.abs(dateNow.getTime() - dateObj.getTime()) / 1000;\n    let add;\n    if (timeDiff < 60) add = ' seconds';else if (timeDiff < 60 * 60) {\n      add = ' minutes';\n      timeDiff /= 60;\n    } else if (timeDiff < 60 * 60 * 24) {\n      add = ' hours';\n      timeDiff /= 60 * 24;\n    } else if (timeDiff < 60 * 60 * 24 * 30) {\n      add = ' days';\n      timeDiff /= 60 * 60 * 24;\n    }\n    let res = add ? Math.round(timeDiff) + add : 'More than month ago';\n    return res;\n  }\n\n  getRandomInt(max) {\n    return Math.floor(Math.random() * Math.floor(max));\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"article\", {\n      className: \"post-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-inline-flex flex-wrap\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"m-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 28\n      }\n    }, this.post.user.first_name, \" \", this.post.user.last_name)), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"m-0\",\n      style: {\n        color: \"gray\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }\n    }, \"\\xA0@\", this.post.user.username), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"m-0\",\n      style: {\n        color: \"gray\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }\n    }, \"\\xA0\\xB7\\xA0\", this.formatDate(this.post.date))), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 7\n      }\n    }, this.post.body), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-inline-flex\",\n      style: {\n        fontSize: \"10pt\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"m-0\",\n      style: {\n        color: \"#17bf63\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }\n    }, \"\\u041E\\u0434\\u043E\\u0431\\u0440\\u044F\\u044E \", /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faThumbsUp,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 62\n      }\n    }), \" \", this.getRandomInt(10000), \" \"), \"\\xA0 \\xA0 \\xA0\", /*#__PURE__*/React.createElement(\"p\", {\n      className: \"m-0\",\n      style: {\n        color: \"#e0245e\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }\n    }, \" \\u041E\\u0441\\u0443\\u0436\\u0434\\u0430\\u044E \", /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faThumbsDown,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 63\n      }\n    }), \" \", this.getRandomInt(1000))));\n  }\n\n}\n\nexport default PostItem;","map":{"version":3,"sources":["/home/uladzimir/All/Studies/microblog/microblog/frontend/src/components/PostItem.js"],"names":["React","Component","PropTypes","FontAwesomeIcon","faThumbsUp","faThumbsDown","PostItem","constructor","props","state","post","formatDate","date","dateObj","Date","dateNow","timeDiff","Math","abs","getTime","add","res","round","getRandomInt","max","floor","random","render","user","first_name","last_name","color","username","body","fontSize"],"mappings":"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","sourcesContent":["import React, {Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\nimport { faThumbsUp, faThumbsDown} from '@fortawesome/free-regular-svg-icons'\n\nclass PostItem extends Component{\n    constructor(props) {\n      super(props);\n      this.state = {\n  \n      };\n      this.post = props.post;\n    }\n\n    formatDate(date){\n      let dateObj = new Date(date)\n      let dateNow = new Date();\n      let timeDiff = Math.abs(dateNow.getTime() - dateObj.getTime())/1000;\n      let add;\n      if (timeDiff < 60)\n        add = ' seconds'\n      else if (timeDiff < 60 * 60){\n        add = ' minutes'\n        timeDiff /= 60\n      }\n      else if (timeDiff < 60 * 60 * 24){\n        add = ' hours'\n        timeDiff /= 60 * 24\n      }\n      else if (timeDiff < 60 * 60 * 24 * 30){\n        add = ' days'\n        timeDiff /= 60 * 60 * 24\n      }\n\n      let res = add ? Math.round(timeDiff) + add : 'More than month ago' \n      return res\n    }\n\n    getRandomInt(max) {\n      return Math.floor(Math.random() * Math.floor(max));\n    }\n\n    render(){\n    return (\n    <article className=\"post-container\">\n      <div className=\"d-inline-flex flex-wrap\">\n        <p className=\"m-0\"><b>{this.post.user.first_name} {this.post.user.last_name}</b></p>\n        <p className=\"m-0\" style={{color:\"gray\"}}>&nbsp;@{this.post.user.username}</p>\n        <p className=\"m-0\" style={{color:\"gray\"}}>&nbsp;&middot;&nbsp;{this.formatDate(this.post.date)}</p>\n      </div>\n        \n      <div>{this.post.body}</div>\n      <div className=\"d-inline-flex\" style={{fontSize:\"10pt\"}}>\n        <p className=\"m-0\" style={{color:\"#17bf63\"}}>Одобряю <FontAwesomeIcon icon={faThumbsUp}/> {this.getRandomInt(10000)} </p>\n        &nbsp; &nbsp; &nbsp;\n        <p className=\"m-0\" style={{color:\"#e0245e\"}}> Осуждаю <FontAwesomeIcon icon={faThumbsDown}  /> {this.getRandomInt(1000)}</p>\n      </div>\n        \n    </article>\n    )\n}\n}\n\nexport default PostItem"]},"metadata":{},"sourceType":"module"}