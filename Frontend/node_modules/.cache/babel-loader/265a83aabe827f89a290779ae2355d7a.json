{"ast":null,"code":"var _jsxFileName = \"/home/uladzimir/All/Studies/microblog/microblog/frontend/src/App.js\";\nimport React, { Component, useState } from 'react';\nimport { BrowserRouter, Redirect, Router, Route, Switch } from 'react-router-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport $ from 'jquery';\nimport Popper from 'popper.js';\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\nimport { createBrowserHistory } from 'history';\nimport { Home } from './pages/Home';\nimport { About } from './pages/About';\nimport { Navbar } from './components/Navbar';\nimport Register from './pages/Register';\nimport Login from './pages/Login';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.updateState = logged_in => {\n      this.setState({\n        logged_in: logged_in\n      });\n      this.getCurrentUser();\n    };\n\n    this.handle_logout = () => {\n      fetch(\"http://localhost:8000/api/logout/\", {\n        method: 'POST',\n        headers: {\n          Authorization: 'JWT ' + localStorage.getItem('access_token'),\n          'Content-Type': 'application/json',\n          accept: 'application/json'\n        },\n        body: JSON.stringify({\n          refresh_token: localStorage.getItem('refresh_token')\n        })\n      });\n      localStorage.removeItem('access_token');\n      localStorage.removeItem('refresh_token');\n      this.setState({\n        logged_in: false,\n        username: '',\n        user_id: ''\n      });\n      this.history.push('/login');\n    };\n\n    this.state = {\n      logged_in: localStorage.getItem('access_token') ? true : false,\n      username: '',\n      user_id: '',\n      posts: []\n    };\n    this.history = createBrowserHistory();\n    this.updateState = this.updateState.bind(this);\n  }\n\n  getCurrentUser() {\n    if (this.state.logged_in) {\n      fetch('http://localhost:8000/api/current_user/', {\n        headers: {\n          Authorization: `JWT ${localStorage.getItem('access_token')}`\n        }\n      }).then(res => res.json()).then(json => {\n        this.setState({\n          username: json.username,\n          user_id: json.id\n        });\n        console.log(this.state);\n      });\n    } else {\n      this.history.push('/login');\n    }\n  }\n\n  componentDidMount() {\n    this.getCurrentUser();\n    fetch('http://localhost:8000/api/posts/').then(response => response.json()).then(posts => {\n      console.log(posts);\n      this.setState({\n        posts: posts\n      });\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Router, {\n      history: this.history,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Navbar, {\n      logged_in: this.state.logged_in,\n      username: this.state.username,\n      handle_logout: this.handle_logout,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Switch, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      exac: true,\n      path: '/',\n      render: props => /*#__PURE__*/React.createElement(Home, Object.assign({}, props, {\n        posts: this.state.posts,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 30\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: '/about',\n      exact: true,\n      component: About,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: '/register',\n      exact: true,\n      component: Register,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      exac: true,\n      path: '/login',\n      render: props => /*#__PURE__*/React.createElement(Login, Object.assign({}, props, {\n        history: this.history,\n        updateState: this.updateState,\n        getCurrentUser: this.getCurrentUser,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 32\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: '/logout',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 11\n      }\n    }))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/uladzimir/All/Studies/microblog/microblog/frontend/src/App.js"],"names":["React","Component","useState","BrowserRouter","Redirect","Router","Route","Switch","$","Popper","createBrowserHistory","Home","About","Navbar","Register","Login","App","constructor","props","updateState","logged_in","setState","getCurrentUser","handle_logout","fetch","method","headers","Authorization","localStorage","getItem","accept","body","JSON","stringify","refresh_token","removeItem","username","user_id","history","push","state","posts","bind","then","res","json","id","console","log","componentDidMount","response","render"],"mappings":"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","sourcesContent":["import React, { Component, useState } from 'react';\nimport {BrowserRouter, Redirect, Router, Route, Switch} from 'react-router-dom'\n\t\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport $ from 'jquery';\nimport Popper from 'popper.js';\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\nimport { createBrowserHistory } from 'history';\n\nimport {Home} from './pages/Home'\nimport {About} from './pages/About'\nimport {Navbar} from './components/Navbar'\nimport Register from './pages/Register'\nimport Login from './pages/Login'\n\nclass App extends Component{\n  constructor(props) {\n    super(props);\n    this.state = {\n      logged_in: localStorage.getItem('access_token') ? true : false,\n      username: '',\n      user_id: '',\n      posts: []\n    };\n    this.history = createBrowserHistory();\n    this.updateState = this.updateState.bind(this)\n  }\n\n  updateState = (logged_in) =>{\n    this.setState({\n      logged_in: logged_in,\n    })\n    this.getCurrentUser();\n  }\n\n  getCurrentUser(){\n    if (this.state.logged_in){\n      fetch('http://localhost:8000/api/current_user/', {\n        headers: {\n          Authorization: `JWT ${localStorage.getItem('access_token')}`\n        }\n      })\n      .then(res => res.json())\n      .then(json => {\n        this.setState({\n          username: json.username,\n          user_id: json.id\n        });\n        console.log(this.state)\n      });\n    }\n    else{\n      this.history.push('/login');\n    }\n  }\n\n  componentDidMount() {\n    this.getCurrentUser();\n    fetch('http://localhost:8000/api/posts/')\n            .then(response => response.json())\n            .then(posts => {\n                console.log(posts);\n                this.setState({posts:posts})\n            })\n  }\n\n  handle_logout = () => {\n    fetch(\"http://localhost:8000/api/logout/\", {\n        method: 'POST',\n        headers: {\n          Authorization: 'JWT ' + localStorage.getItem('access_token'),\n          'Content-Type':'application/json',\n          accept: 'application/json',\n      },\n        body: JSON.stringify(\n          {\n            refresh_token: localStorage.getItem('refresh_token')\n          }\n          ),\n      }\n    )\n    localStorage.removeItem('access_token');\n    localStorage.removeItem('refresh_token');\n    this.setState({ logged_in: false, username: '', user_id: ''});\n    this.history.push('/login')\n  };\n\n  render(){\n    return (\n      <Router history={this.history}>\n        <div>\n        <Navbar  \n          logged_in={this.state.logged_in}\n          username={this.state.username}\n          handle_logout={this.handle_logout}\n        />\n        <Switch>\n          <Route exac path={'/'} \n          render={(props) => <Home {...props}\n          posts = {this.state.posts}\n          />}/>\n          <Route path={'/about'} exact component={About}/>\n          <Route path={'/register'} exact component={Register}/>\n          <Route exac path={'/login'}  \n            render={(props) => <Login {...props} \n              history={this.history}\n              updateState={this.updateState} \n              getCurrentUser={this.getCurrentUser}\n            />}/>\n          <Route path={'/logout'} />\n        </Switch>\n        </div>\n    </Router>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}