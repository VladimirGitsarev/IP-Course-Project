{"ast":null,"code":"var _jsxFileName = \"/home/uladzimir/All/Studies/microblog/microblog/frontend/src/App.js\";\nimport React, { Component, useState } from 'react';\nimport { BrowserRouter, Redirect, Router, Route, Switch } from 'react-router-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport $ from 'jquery';\nimport Popper from 'popper.js';\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\nimport { createBrowserHistory } from 'history';\nimport axiosInstance from 'axios';\nimport Home from './pages/Home';\nimport { About } from './pages/About';\nimport Navbar from './components/Navbar';\nimport Register from './pages/Register';\nimport Login from './pages/Login';\nimport Profile from './pages/Profile';\nimport User from './pages/User';\nimport UserContext from './Context';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.updateState = logged_in => {\n      this.setState({\n        logged_in: logged_in\n      });\n      this.getCurrentUser();\n    };\n\n    this.handle_logout = () => {\n      axiosInstance.post(`http://localhost:8000/api/logout/`, {\n        refresh_token: localStorage.getItem('refresh_token')\n      });\n      localStorage.removeItem('access_token');\n      localStorage.removeItem('refresh_token');\n      axiosInstance.defaults.headers['Authorization'] = null;\n      this.setState({\n        logged_in: false,\n        username: '',\n        user_id: ''\n      });\n      this.history.push('/login');\n    };\n\n    this.state = {\n      logged_in: localStorage.getItem('access_token') ? true : false,\n      user: '',\n      account: ''\n    };\n    this.history = createBrowserHistory();\n    this.updateState = this.updateState.bind(this);\n  }\n\n  getCurrentUser() {\n    axiosInstance.defaults.headers['Authorization'] = 'JWT ' + localStorage.getItem('access_token');\n\n    if (this.state.logged_in) {\n      axiosInstance.get('http://localhost:8000/api/current_user/').then(res => {\n        this.setState({\n          user: res.data.user,\n          account: res.data\n        });\n        console.log(this.state.account);\n      });\n    } else {\n      this.history.push('/login');\n    }\n  }\n\n  componentDidMount() {\n    if (this.state.logged_in) this.getCurrentUser();else {\n      this.history.push('/login');\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Router, {\n      history: this.history,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Navbar, {\n      logged_in: this.state.logged_in,\n      user: this.state.user,\n      account: this.state.account,\n      handle_logout: this.handle_logout,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Switch, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      path: '/',\n      exact: true,\n      render: props => /*#__PURE__*/React.createElement(Home, Object.assign({}, props, {\n        account: this.state.account,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 30\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: '/about',\n      component: About,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: '/user/:name',\n      render: props => /*#__PURE__*/React.createElement(User, Object.assign({}, props, {\n        account: this.state.account,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 32\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: '/register',\n      component: Register,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: '/profile',\n      render: props => /*#__PURE__*/React.createElement(Profile, Object.assign({}, props, {\n        account: this.state.account,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 32\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: '/login',\n      render: props => /*#__PURE__*/React.createElement(Login, Object.assign({}, props, {\n        history: this.history,\n        updateState: this.updateState,\n        getCurrentUser: this.getCurrentUser,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 32\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: '/logout',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 11\n      }\n    })));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/uladzimir/All/Studies/microblog/microblog/frontend/src/App.js"],"names":["React","Component","useState","BrowserRouter","Redirect","Router","Route","Switch","$","Popper","createBrowserHistory","axiosInstance","Home","About","Navbar","Register","Login","Profile","User","UserContext","App","constructor","props","updateState","logged_in","setState","getCurrentUser","handle_logout","post","refresh_token","localStorage","getItem","removeItem","defaults","headers","username","user_id","history","push","state","user","account","bind","get","then","res","data","console","log","componentDidMount","render"],"mappings":"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","sourcesContent":["import React, { Component, useState } from 'react';\nimport {BrowserRouter, Redirect, Router, Route, Switch} from 'react-router-dom'\n\t\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport $ from 'jquery';\nimport Popper from 'popper.js';\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\nimport { createBrowserHistory } from 'history';\nimport axiosInstance from 'axios';\n\nimport Home from './pages/Home'\nimport {About} from './pages/About'\nimport Navbar from './components/Navbar'\nimport Register from './pages/Register'\nimport Login from './pages/Login'\nimport Profile from './pages/Profile'\nimport User from './pages/User'\n\nimport UserContext from './Context'\n\nclass App extends Component{\n  constructor(props) {\n    super(props);\n    this.state = {\n      logged_in: localStorage.getItem('access_token') ? true : false,\n      user: '',\n      account: ''\n    };\n    this.history = createBrowserHistory();\n    this.updateState = this.updateState.bind(this)\n  }\n\n  updateState = (logged_in) =>{\n    this.setState({\n      logged_in: logged_in,\n    })\n    this.getCurrentUser();\n  }\n\n  getCurrentUser(){\n    axiosInstance.defaults.headers['Authorization'] =\n    'JWT ' + localStorage.getItem('access_token');\n    if (this.state.logged_in){\n      axiosInstance\n      .get('http://localhost:8000/api/current_user/')\n      .then(res => {\n        this.setState({\n          user: res.data.user,\n          account: res.data\n        });\n        console.log(this.state.account)\n      });\n    }\n    else{\n      this.history.push('/login');\n    }\n  }\n\n  componentDidMount() {\n    if (this.state.logged_in)\n      this.getCurrentUser();\n    else{\n      this.history.push('/login');\n    }\n  }\n\n  handle_logout = () => {\n    axiosInstance.post(`http://localhost:8000/api/logout/`, {\n\t\t\trefresh_token: localStorage.getItem('refresh_token'),\n\t\t});\n\t\tlocalStorage.removeItem('access_token');\n\t\tlocalStorage.removeItem('refresh_token');\n\t\taxiosInstance.defaults.headers['Authorization'] = null;\n    this.setState({ logged_in: false, username: '', user_id: ''});\n    this.history.push('/login')\n  };\n\n  render(){\n    return (\n      <Router history={this.history}>\n        <Navbar  \n          logged_in={this.state.logged_in}\n          user={this.state.user}\n          account={this.state.account}\n          handle_logout={this.handle_logout}\n        />\n        <Switch>\n          <Route path={'/'} exact\n          render={(props) => <Home {...props}\n          account = {this.state.account}\n          />}/>\n          <Route path={'/about'} component={About}/>\n          <Route path={'/user/:name'} \n            render={(props) => <User {...props} \n              account={this.state.account}\n            />}/>\n          <Route path={'/register'} component={Register}/>\n          <Route path={'/profile'} \n            render={(props) => <Profile {...props} \n              account={this.state.account}\n            />}/>\n          <Route path={'/login'}  \n            render={(props) => <Login {...props} \n              history={this.history}\n              updateState={this.updateState} \n              getCurrentUser={this.getCurrentUser}\n            />}/>\n          <Route path={'/logout'} />\n        </Switch>\n    </Router>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}